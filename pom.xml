<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>TestsSpringBatch</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>TestsSpringBatch</name>
	<description>Integration tests for a Spring Batch job.</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR1</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
        	<groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-actuator</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-task</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.hsqldb</groupId>
		    <artifactId>hsqldb</artifactId>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
			    <!-- Separates the unit tests from the integration tests. -->
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <configuration>
			       <!-- Skip the default running of this plug-in (or everything is run twice...see below) -->
			       <skip>true</skip>
			       <!-- Show 100% of the lines from the stack trace (doesn't work) -->
			       <trimStackTrace>false</trimStackTrace>
			    </configuration>
			    <executions>
			       <execution>
			          <id>unit-tests</id>
			          <phase>test</phase>
			          <goals>
			             <goal>test</goal>
			          </goals>
			          <configuration>
			                <!-- Never skip running the tests when the test phase is invoked -->
			                <skip>false</skip>
			             <includes>
			                   <!-- Include unit tests within integration-test phase. -->
			                <include>**/*Tests.java</include>
			             </includes>
			             <excludes>
			               <!-- Exclude integration tests within (unit) test phase. -->
			                <exclude>**/*IT.java</exclude>
			            </excludes>
			          </configuration>
			       </execution>
			       <execution>
			          <id>integration-tests</id>
			          <phase>integration-test</phase>
			          <goals>
			             <goal>test</goal>
			          </goals>
			          <configuration>
			            <!-- Never skip running the tests when the integration-test phase is invoked -->
			             <skip>false</skip>
			             <includes>
			               <!-- Include integration tests within integration-test phase. -->
			               <include>**/*IT.java</include>
			             </includes>
			          </configuration>
			       </execution>
			    </executions>
			 </plugin>
		</plugins>
		
	</build>

</project>
